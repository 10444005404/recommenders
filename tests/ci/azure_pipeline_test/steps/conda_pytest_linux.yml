parameters:
  conda_env: #
  spark: not spark # | spark
  gpu: not gpu # | gpu
  unit_tests: false
  smoke_tests: false
  integration_tests: false
  notebook_tests: false

steps:
  - script: |
      . /anaconda/etc/profile.d/conda.sh
      conda activate ${{parameters.conda_env}}

      echo "Notebook tests"
      pytest tests/unit \
        --durations 0 \
        -m "not notebooks and ${{parameters.spark}} and  ${{parameters.gpu}}" \
        --junitxml=reports/test-unit.xml

      conda deactivate
    displayName: 'Run Unit Tests'
    condition: eq('${{ parameters.unit_tests }}', true)
    - ${{ if eq(parameters.spark, 'spark') }}:
      env:
        PYSPARK_PYTHON: /anaconda/envs/${{parameters.conda_env}}/bin/python
        PYSPARK_DRIVER_PYTHON: /anaconda/envs/${{parameters.conda_env}}/bin/python

  - script: |
      . /anaconda/etc/profile.d/conda.sh
      conda activate ${{parameters.conda_env}}

      echo "Smoke tests"
      pytest tests/smoke \
        --durations 0 \
        -m "smoke and ${{parameters.spark}} and ${{parameters.gpu}}" \
        --junitxml=reports/test-smoke.xml

      conda deactivate
    displayName: 'Run Smoke Tests'
    condition: eq('${{ parameters.smoke_tests }}', true)

  - script: |
      . /anaconda/etc/profile.d/conda.sh
      conda activate ${{parameters.conda_env}}

      echo "Integration tests"
      pytest tests/integration \
        --durations 0 \
        -m "integration and ${{parameters.spark}} and ${{parameters.gpu}}" \
        --junitxml=reports/test-integration.xml

      conda deactivate
    displayName:
    condition: eq('${{ parameters.integration_tests }}', true)

  - script: |
      . /anaconda/etc/profile.d/conda.sh
      conda activate ${{parameters.conda_env}}

      echo "Notebook tests"
      pytest tests/unit \
        --durations 0 \
        -m "notebooks and  ${{parameters.spark}} and  ${{parameters.gpu}}" \
        --junitxml=reports/test-unit.xml

      conda deactivate
    displayName: 'Run Notebook Tests'
    condition: eq('${{ parameters.notebook_tests }}', true)
    - ${{ if eq(parameters.spark, 'spark') }}:
      env:
        PYSPARK_PYTHON: /anaconda/envs/${{parameters.conda_env}}/bin/python
        PYSPARK_DRIVER_PYTHON: /anaconda/envs/${{parameters.conda_env}}/bin/python

  - task: PublishTestResults@2
    displayName: 'Publish Test Results '
    inputs:
      testResultsFiles: '**/test-*.xml'
      failTaskOnFailedTests: true
    condition: succeededOrFailed()
